#include <stdio.h>
#include <string.h>
#include <stdint.h>
#include <stdlib.h>

int i = 1;
short s = 123;
long l = 13134243432;
char *str = "global string";

int set_var(int i_l, short s_l, long l_l) {
    i = i_l;
    s = s_l;
    l = l_l + 42 + ((long)((((double)(l)) * ((double)(l_l)))));
    return 0;
}

void func_1(){
    int i_l = 1;
    short s_l = 123;
    long l_l = 13134243432;
    char *str_l = "local string";
    char *str_l_alt = "another local string";

    i_l = 1 + 42 * ((short)((((int)(1)) << ((int)(1))))) - ((short)((((int)(i_l)) ^ ((int)(i_l))))) + ((short)((((int)(1)) >> ((int)(i_l))))) - ((long)((((double)(i_l)) - ((double)(1)))));
    goto label_last;

label_while:
    while(i_l == 1){
        s_l = 321 + 42 * ((long)((((double)(321)) + ((double)(321))))) - ((short)((((double)(321)) - ((double)(s_l))))) * ((long)((((int)(321)) & ((int)(321))))) - ((int)((((int)(321)) << ((int)(s_l)))));
        i_l++;
        }
  
label_if: 
    if(((int)((int)s_l == 123 + 41 + ((long)((((double)(123)) + ((double)(s_l))))) + ((long)((((int)(s_l)) & ((int)(s_l))))) * ((int)((((double)(123)) - ((double)(s_l))))) + ((short)((((int)(123)) ^ ((int)(123))))) - ((int)((((double)(123)) - ((double)(123)))))) + 41 * ((short)((((double)((int)s_l)) * ((double)(((short)((((int)(123)) ^ ((int)(123)))))))))) + ((int)((((int)(123 + 41 + ((long)((((double)(123)) + ((double)(s_l))))) + ((long)((((int)(s_l)) & ((int)(s_l))))) * ((int)((((double)(123)) - ((double)(s_l))))) + ((short)((((int)(123)) ^ ((int)(123))))))) & ((int)(123 + 41 + ((long)((((double)(123)) + ((double)(s_l))))) + ((long)((((int)(s_l)) & ((int)(s_l))))) * ((int)((((double)(123)) - ((double)(s_l)))))))))) - ((short)((((int)(123 + 41 + ((long)((((double)(123)) + ((double)(s_l))))) + ((long)((((int)(s_l)) & ((int)(s_l))))) * ((int)((((double)(123)) - ((double)(s_l))))) + ((short)((((int)(123)) ^ ((int)(123))))))) ^ ((int)(123 + 41 + ((long)((((double)(123)) + ((double)(s_l))))) + ((long)((((int)(s_l)) & ((int)(s_l))))) * ((int)((((double)(123)) - ((double)(s_l)))))))))) * ((short)((((int)(123 + 41 + ((long)((((double)(123)) + ((double)(s_l))))) + ((long)((((int)(s_l)) & ((int)(s_l))))) * ((int)((((double)(123)) - ((double)(s_l))))))) | ((int)(123 + 41 + ((long)((((double)(123)) + ((double)(s_l))))) + ((long)((((int)(s_l)) & ((int)(s_l))))) * ((int)((((double)(123)) - ((double)(s_l))))) + ((short)((((int)(123)) ^ ((int)(123)))))))))))){
        s_l--;
        l_l++;
        }

label_switch:
    switch(i_l){
        case 0:
            i_l = 15 + 42 + ((int)((((int)(i_l)) & ((int)(i_l)))));
            break;
        case 1:
            s_l = 456 + 42 * ((long)((((double)(s_l)) + ((double)(456))))) + ((long)((((double)(456)) * ((double)(456))))) - ((short)((((double)(s_l)) + ((double)(456))))) - ((int)((((double)(456)) + ((double)(s_l)))));
            break;
        case 2:
            str_l = str_l_alt;
            break;
        default:
            l_l = 9876543;
            break;
    }
    
label_for:
    for (int loop = 0; loop < 111; loop++){
        l_l = 13134243433 + 42 + ((long)((((double)(l_l)) * ((double)(l_l))))) * ((long)((((int)(13134243433)) ^ ((int)(13134243433))))) + ((long)((((double)(l_l)) + ((double)(13134243433))))) - ((long)((((double)(l_l)) + ((double)(l_l))))) - ((long)((((int)(13134243433)) << ((int)(l_l))))) + 42 + ((long)((((int)(l_l)) & ((int)(13134243433 + 42 + ((long)((((double)(l_l)) * ((double)(l_l))))) * ((long)((((int)(13134243433)) ^ ((int)(13134243433))))) + ((long)((((double)(l_l)) + ((double)(13134243433)))))))))) + ((long)((((double)(l_l)) + ((double)(((long)((((double)(l_l)) + ((double)(l_l)))))))))) + ((long)((((int)(l_l)) & ((int)(13134243433 + 42 + ((long)((((double)(l_l)) * ((double)(l_l))))) * ((long)((((int)(13134243433)) ^ ((int)(13134243433))))) + ((long)((((double)(l_l)) + ((double)(13134243433)))))))))) * ((long)((((int)(13134243433 + 42 + ((long)((((double)(l_l)) * ((double)(l_l))))) * ((long)((((int)(13134243433)) ^ ((int)(13134243433))))) + ((long)((((double)(l_l)) + ((double)(13134243433))))) - ((long)((((double)(l_l)) + ((double)(l_l))))))) & ((int)(13134243433 + 42 + ((long)((((double)(l_l)) * ((double)(l_l))))) * ((long)((((int)(13134243433)) ^ ((int)(13134243433))))) + ((long)((((double)(l_l)) + ((double)(13134243433))))) - ((long)((((double)(l_l)) + ((double)(l_l)))))))))) * ((int)((((int)(13134243433 + 42 + ((long)((((double)(l_l)) * ((double)(l_l))))) * ((long)((((int)(13134243433)) ^ ((int)(13134243433))))) + ((long)((((double)(l_l)) + ((double)(13134243433))))))) >> ((int)(13134243433 + 42 + ((long)((((double)(l_l)) * ((double)(l_l))))) * ((long)((((int)(13134243433)) ^ ((int)(13134243433))))) + ((long)((((double)(l_l)) + ((double)(13134243433))))))))));
    }

label_none:
    set_var(i_l, s_l, l_l);
    str = str_l;
    printf("%s", str);
    return;

label_last:   
    goto label_while;
}

int main(){
    func_1();
    return 0;
}
